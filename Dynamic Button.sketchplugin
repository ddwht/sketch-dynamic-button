// just a comment (cmd j)

function alert(msg, title) {
  title = title || "alert";
  var app = [NSApplication sharedApplication];
  [app displayDialog:msg withTitle:title];
}

function isLayerInGroup(name, group) {
  var BGLayer;
  var groupLayers = [group layers];

  for (var i=0; i<[groupLayers count]; i++) {
    var layer = groupLayers.objectAtIndex(i);
    log([layer name]);
    if ([layer name] == name) {
      BGLayer = layer;
    }
  }

  return BGLayer;
}

if ([selection count] === 0) {
  alert('Nothing selected', 'Error');
}
else {
  var currentLayer = selection[0];
  var layerHeight = [[currentLayer frame] height];
  var layerWidth = [[currentLayer frame] width];
  var layerX = [[currentLayer frame] x];
  var layerY = [[currentLayer frame] y];

  var splitLayer = [];
  var splitLayer = [currentLayer name].split(':');
  var offsetTop,offsetRight,offsetRight,offsetLeft;

  log(splitLayer.length);

  switch(splitLayer.length) {
    case 1:
      currentLayer.name = '0:0:0:0';
      offsetTop = offsetRight = offsetBottom = offsetLeft = 0;
      break;
    case 2:
      offsetTop = offsetBottom = parseInt(splitLayer[0]) || 0;
      offsetRight = offsetLeft = parseInt(splitLayer[1]) || 0;
      break;
    case 3:
      offsetTop = parseInt(splitLayer[0]) || 0;
      offsetRight = offsetLeft = parseInt(splitLayer[1]) || 0;
      offsetBottom = parseInt(splitLayer[2]) || 0;
      break;
    case 4:
      offsetTop = parseInt(splitLayer[0]) || 0;
      offsetRight = parseInt(splitLayer[1]) || 0;
      offsetBottom = parseInt(splitLayer[2]) || 0;
      offsetLeft = parseInt(splitLayer[3]) || 0;
      break;
    default:
      alert('Wrong format', 'Error');
  }

  var parentGroup = [currentLayer parentGroup];
  var BG = isLayerInGroup('BG', parentGroup);
  if (BG) {
    [[BG frame] setHeight:(layerHeight + offsetTop + offsetBottom)];
    [[BG frame] setWidth:(layerWidth + offsetLeft + offsetRight)];
    [[BG frame] setX: 0];
    [[BG frame] setY: 0];
    [[currentLayer frame] setX: offsetLeft];
    [[currentLayer frame] setY: offsetTop];
  }
  else {
    var newGroup = [parentGroup addLayerOfType:'group'];
    newGroup.name = "flex button";
    [[newGroup frame] setHeight:(layerHeight + offsetTop + offsetBottom)];
    [[newGroup frame] setWidth:(layerWidth + offsetLeft + offsetRight)];

    var newRect = [newGroup addLayerOfType:'rectangle']
    var x = layerX - offsetLeft;
    var y = layerY - offsetTop;
    var width = (layerWidth + offsetLeft + offsetRight);
    var height = (layerHeight + offsetTop + offsetBottom)

    newRect.frame = MSRect.rectWithRect(NSMakeRect(x, y, width, height))
    newRect.name = "BG";

    var newRect = newRect.embedInShapeGroup();
    var fill = newRect.style().fills().addNewStylePart()
    fill.color = MSColor.colorWithSVGString("#ff0000");

    newLayer = [currentLayer duplicate];
    [parentGroup removeLayer:newLayer];
    newGroup.addLayers([newLayer]);
    [parentGroup removeLayer: currentLayer];
  }


}
